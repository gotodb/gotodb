---
apiVersion: v1
kind: Namespace
metadata:
  name: gotodb

---
apiVersion: v1
kind: Service
metadata:
  namespace: gotodb
  name: etcd
spec:
  clusterIP: None
  ports:
    - port: 2379
      name: client
    - port: 2380
      name: peer
  selector:
    app: etcd

---
apiVersion: v1
kind: Service
metadata:
  namespace: gotodb
  name: etcd-client
spec:
  type: LoadBalancer
  ports:
    - name: etcd-client
      port: 2379
      protocol: TCP
      targetPort: 2379
  selector:
    app: etcd

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: gotodb
  name: etcd
  labels:
    app: etcd
spec:
  serviceName: etcd
  replicas: 1
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      name: etcd
      labels:
        app: etcd
    spec:
      volumes:
        - name: etcd-storage
          emptyDir: {}
      containers:
        - name: etcd
          image: quay.io/coreos/etcd:latest
          ports:
            - containerPort: 2379
              name: client
            - containerPort: 2380
              name: peer
          volumeMounts:
            - name: etcd-storage
              mountPath: /var/run/etcd/default.etcd
          command:
            - /bin/sh
            - -c
            - |
              PEERS="etcd-0=http://${HOSTNAME}:2380"
              exec etcd --name ${HOSTNAME} \
                --listen-peer-urls http://0.0.0.0:2380 \
                --listen-client-urls http://0.0.0.0:2379 \
                --advertise-client-urls http://${HOSTNAME}.etcd:2379 \
                --initial-advertise-peer-urls http://${HOSTNAME}:2380 \
                --initial-cluster-token etcd-cluster-1 \
                --initial-cluster ${PEERS} \
                --initial-cluster-state new \
                --data-dir /var/run/etcd/default.etcd

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gotodb
  namespace: gotodb
data:
  config.yaml: |-
    runtime:
      catalog: test
      schema: test
      parallel-number: 4

    file-connector:
      file.info.student:
        catalog: file
        schema: info
        table: student
        file-type: csv
        column-names: [id,name,age]
        column-types: [INT64,STRING,INT32]
        paths: [./db/file/info/student/]
    
    http-connector:
      http.etcd.*:
        catalog: http
        schema: etcd
        table: "*"
        data-path:
        filter-column: _http
        result-column: _
        column-names: [ key, value ]
        column-types: [ STRING, STRING ]
    
    mysql-connector:
      mysql.goploy.*:
        catalog: localhost
        schema: goploy
        table: user
        host: mysql
        port: 3306
        user: root
        password:
        column-names: []
        column-types: []
    
    etcd:
      endpoint: [${ETCD_ENDPOINT}]
      dial-timeout: 5
      dial-keepalive-timeout: 5
      username:
      password:
    
    coordinator:
      http-port: ${CO_HTTP_PORT}
    
    worker:
      ip: ${HOSTNAME}${SERVICE_NAME}
      tcp-port: ${WORKER_TCP_PORT}
      rpc-port: ${WORKER_RPC_PORT}

---
apiVersion: v1
kind: Service
metadata:
  namespace: gotodb
  name: worker
spec:
  clusterIP: None
  ports:
    - port: 50051
      name: tcp
    - port: 50052
      name: rpc
  selector:
    app: worker

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: gotodb
  name: worker
  labels:
    app: worker
spec:
  serviceName: worker
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      name: worker
      labels:
        app: worker
    spec:
      initContainers:
        - name: init-etcd
          image: curlimages/curl:7.68.0
          command: ['sh', '-c', 'until curl -L http://etcd:2379/version; do echo waiting for etcd; sleep 2; done;']
        - name: init-config
          image: dibi/envsubst
          env:
            - name: SERVICE_NAME
              value: ".worker"
            - name: ETCD_ENDPOINT
              value: "http://etcd:2379"
            - name: WORKER_TCP_PORT
              value: "50051"
            - name: WORKER_RPC_PORT
              value: "50052"
          volumeMounts:
            - name: config
              mountPath: /processed
            - name: configmap
              mountPath: /workdir
      containers:
        - name: worker
          image: zhenorzz/gotodb-worker:latest
          ports:
            - containerPort: 50051
              name: worker-tcp
            - containerPort: 50052
              name: worker-rpc
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /opt/gotodb/config.yaml
              name: config
              subPath: config.yaml
      volumes:
        - name: tmp
          hostPath:
            path: /tmp
            type: Directory
        - name: configmap
          configMap:
            name: gotodb
        - name: config
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  namespace: gotodb
  name: coordinator-client
spec:
  type: LoadBalancer
  ports:
    - name: coordinator-client
      port: 8001
      protocol: TCP
      targetPort: 8001
  selector:
    app: coordinator

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: gotodb
  name: coordinator
  labels:
    app: coordinator
spec:
  replicas: 3
  selector:
    matchLabels:
      app: coordinator
  template:
    metadata:
      labels:
        app: coordinator
    spec:
      initContainers:
        - name: init-etcd
          image: curlimages/curl:7.68.0
          command: [ 'sh', '-c', 'until curl -L http://etcd:2379/version; do echo waiting for etcd; sleep 2; done;' ]
        - name: init-config
          image: dibi/envsubst
          env:
            - name: ETCD_ENDPOINT
              value: "http://etcd:2379"
            - name: CO_HTTP_PORT
              value: "8001"
          volumeMounts:
            - name: config
              mountPath: /processed
            - name: configmap
              mountPath: /workdir
      containers:
        - name: coordinator
          image: zhenorzz/gotodb:latest
          ports:
            - containerPort: 8001
              name: co-http
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /opt/gotodb/config.yaml
              name: config
              subPath: config.yaml
      volumes:
        - name: tmp
          hostPath:
            path: /tmp
            type: Directory
        - name: configmap
          configMap:
            name: gotodb
        - name: config
          emptyDir: { }